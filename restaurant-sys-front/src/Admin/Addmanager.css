.mycontainer {
  width: 100vw;
  height: 100vh;
  background: rgb(41 41 41);
  display: flex;
  align-items: center;
  justify-content: center;
}

.mainform {
  background: rgb(26, 24, 24);
  width: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 10px 31px;
  border-radius: 10px;
  box-shadow: 0 0 20px 0px #0f0e0e;
}

.mainform .title {
  color: gold;
  margin-top: 40px;
}

.textInputWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* From Uiverse.io by WhiteNervosa */
.textInputWrapper {
  position: relative;
  width: 100%;
  margin: 12px 5px;
  --accent-color: gold;
}

.textInputWrapper:before {
  transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  border-bottom: 1px solid rgba(0, 0, 0, 0.42);
}

.textInputWrapper:before,
.textInputWrapper:after {
  content: "";
  left: 0;
  right: 0;
  position: absolute;
  pointer-events: none;
  bottom: -1px;
  z-index: 4;
  width: 100%;
}

.textInputWrapper:focus-within:before {
  border-bottom: 1px solid var(--accent-color);
}

.textInputWrapper:before {
  transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  border-bottom: 1px solid rgba(0, 0, 0, 0.42);
}

.textInputWrapper:focus-within:before {
  border-bottom: 1px solid var(--accent-color);
  transform: scaleX(1);
}

.textInputWrapper:focus-within:after {
  border-bottom: 2px solid var(--accent-color);
  transform: scaleX(1);
}

.textInputWrapper:after {
  content: "";
  transform: scaleX(0);
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  will-change: transform;
  border-bottom: 2px solid var(--accent-color);
  border-bottom-color: var(--accent-color);
}

.textInputWrapper input[type="number"]::-webkit-inner-spin-button,
.textInputWrapper input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
}

.textInput::placeholder {
  transition: opacity 250ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  opacity: 1;
  user-select: none;
  color: rgba(255, 255, 255, 0.582);
}

.textInputWrapper .textInput {
  border-radius: 5px 5px 0px 0px;
  box-shadow: inset 0px 0px 10px 0px rgb(78 78 78 / 30%);
  max-height: 36px;
  background-color: #252525;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-duration: 200ms;
  transition-property: background-color;
  color: gold;
  font-size: 14px;
  font-weight: 500;
  padding: 12px 12px 12px 40px;
  width: 100%;
  border-left: none;
  border-bottom: none;
  border-right: none;
}

.textInputWrapper .textInput:focus,
.textInputWrapper .textInput:active {
  outline: none;
}

.textInputWrapper:focus-within .textInput,
.textInputWrapper .textInput:focus,
.textInputWrapper .textInput:active {
  background-color: #353535;
}

.textInputWrapper:focus-within .textInput::placeholder {
  opacity: 0;
}

/* From Uiverse.io by Randdose */
.button {
  all: unset;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  padding: 0.6em 2em;
  border: goldenrod solid 0.15em;
  border-radius: 0.25em;
  color: goldenrod;
  height: 25px;
  width: 40px;
  font-weight: 600;
  cursor: pointer;
  overflow: hidden;
  transition: border 300ms, color 300ms;
  user-select: none;
  margin: 20px;
}

.button p {
  z-index: 1;
}

.button:hover {
  color: #212121;
}

.button:active {
  border-color: goldenrod;
}

.button::after,
.button::before {
  content: "";
  position: absolute;
  width: 9em;
  aspect-ratio: 1;
  background: goldenrod;
  opacity: 50%;
  border-radius: 50%;
  transition: transform 500ms, background 300ms;
}

.button::before {
  left: 0;
  transform: translateX(-8em);
}

.button::after {
  right: 0;
  transform: translateX(8em);
}

.button:hover:before {
  transform: translateX(-1em);
}

.button:hover:after {
  transform: translateX(1em);
}

.button:active:before,
.button:active:after {
  background: goldenrod;
}


.textInputWrapper i{
  position: absolute;
  z-index: 2;
  color: gray;
  top: 30%;
  left: 10px;
}
.textInputWrapper input:focus ~.textInputWrapper i{
  color: goldenrod;
}


.textInputWrapper:has(input:not(:placeholder-shown)) i {
  color: gold;
}
